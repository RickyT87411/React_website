- title: Installation
  items:
    - id: getting-started
      title: Getting Started
    - id: add-react-to-a-website
      title: 既存のウェブサイトに React を追加する
    - id: create-a-new-react-app
      title: 新しい React アプリを作る
    - id: cdn-links
      title: CDN リンク
    - id: release-channels
      title: リリースチャンネル
- title: Main Concepts
  isOrdered: true
  items:
    - id: hello-world
      title: Hello World
    - id: introducing-jsx
      title: JSX の導入
    - id: rendering-elements
      title: 要素のレンダー
    - id: components-and-props
      title: コンポーネントと props
    - id: state-and-lifecycle
      title: state とライフサイクル
    - id: handling-events
      title: イベント処理
    - id: conditional-rendering
      title: 条件付きレンダー
    - id: lists-and-keys
      title: リストと key
    - id: forms
      title: フォーム
    - id: lifting-state-up
      title: state のリフトアップ
    - id: composition-vs-inheritance
      title: コンポジション vs 継承
    - id: thinking-in-react
      title: React の流儀
- title: Advanced Guides
  items:
    - id: accessibility
      title: アクセシビリティ
    - id: code-splitting
      title: コード分割
    - id: context
      title: コンテクスト
    - id: error-boundaries
      title: Error Boundary
    - id: forwarding-refs
      title: ref のフォワーディング
    - id: fragments
      title: フラグメント
    - id: higher-order-components
      title: 高階 (Higher-Order) コンポーネント
    - id: integrating-with-other-libraries
      title: 他のライブラリとのインテグレーション
    - id: jsx-in-depth
      title: JSX を深く理解する
    - id: optimizing-performance
      title: パフォーマンス最適化
    - id: portals
      title: ポータル
    - id: profiler
      title: プロファイラ
    - id: react-without-es6
      title: ES6 なしで React を使う
    - id: react-without-jsx
      title: JSX なしで React を使う
    - id: reconciliation
      title: 差分検出処理
    - id: refs-and-the-dom
      title: Ref と DOM
    - id: render-props
      title: レンダープロップ
    - id: static-type-checking
      title: 静的型チェック
    - id: strict-mode
      title: strict モード
    - id: typechecking-with-proptypes
      title: PropTypes を用いた型チェック
    - id: uncontrolled-components
      title: 非制御コンポーネント
    - id: web-components
      title: Web Components
- title: API Reference
  items:
    - id: react-api
      title: React の最上位 API
      subitems:
        - id: react-component
          title: React.Component
    - id: react-dom
      title: ReactDOM
    - id: react-dom-server
      title: ReactDOMServer
    - id: dom-elements
      title: DOM 要素
    - id: events
      title: 合成イベント (SyntheticEvent)
    - id: test-utils
      title: テストユーティリティ
    - id: shallow-renderer
      title: Shallow Renderer
    - id: test-renderer
      title: Test Renderer
    - id: javascript-environment-requirements
      title: JavaScript 環境の要件
    - id: glossary
      title: React 用語集
- title: Hooks
  isOrdered: true
  items:
    - id: hooks-intro
      title: フックの導入
    - id: hooks-overview
      title: フック早わかり
    - id: hooks-state
      title: ステートフックの利用法
    - id: hooks-effect
      title: 副作用フックの利用法
    - id: hooks-rules
      title: フックのルール
    - id: hooks-custom
      title: 独自フックの作成
    - id: hooks-reference
      title: フック API リファレンス
    - id: hooks-faq
      title: フックに関するよくある質問
- title: Testing
  items:
    - id: testing 
      title: テスト概要
    - id: testing-recipes
      title: テストのレシピ集
    - id: testing-environments
      title: テスト環境
- title: Concurrent Mode (Experimental)
  isOrdered: true
  items:
    - id: concurrent-mode-intro
      title: 並列モードの導入
    - id: concurrent-mode-suspense
      title: サスペンスを使ったデータ取得
    - id: concurrent-mode-patterns
      title: 並列的 UI パターン
    - id: concurrent-mode-adoption
      title: 並列モードの利用開始
    - id: concurrent-mode-reference
      title: 並列モード API リファレンス
- title: Contributing
  items:
    - id: how-to-contribute
      title: 貢献の方法
    - id: codebase-overview
      title: コードベースの概要
    - id: implementation-notes
      title: 実装に関するメモ
    - id: design-principles
      title: 設計原則
- title: FAQ
  items:
    - id: faq-ajax
      title: AJAX と API
    - id: faq-build
      title: Babel、JSX、ビルドステップ
    - id: faq-functions
      title: コンポーネントに関数を渡す
    - id: faq-state
      title: コンポーネントの state
    - id: faq-styling
      title: CSS とスタイルの使用
    - id: faq-structure
      title: ファイル構成
    - id: faq-versioning
      title: バージョニングポリシー
    - id: faq-internals
      title: 仮想 DOM と内部処理
